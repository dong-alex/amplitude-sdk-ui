{"version":3,"sources":["components/LoginUI.js","components/AppBar.js","components/EventTable.js","App.js","AppWrapper.js","index.js"],"names":["LoginContainer","styled","div","GenerateButton","Button","SessionButton","LoginUI","props","currentKey","onSessionStart","onSessionEnd","started","onGenerateClick","TextField","label","InputProps","readOnly","variant","value","onClick","color","startIcon","useStyles","makeStyles","theme","root","flexGrow","marginBottom","menuButton","marginRight","spacing","title","withAmplitudeContext","handleLogEvent","context","classes","className","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","table","minWidth","maxWidth","card","width","height","events","flushEvents","useState","rows","setRows","username","setUsername","property","setProperty","useEffect","eventRows","forEach","event","push","generateData","properties","getEventProperties","eventID","getEventID","eventName","getEventName","hasProperties","length","onChange","target","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","elevation","sessionStarted","handleAPIKeyCreate","handleEndSession","generateAPIKey","setKey","newKey","AppWrapper","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00724063.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LockOpenOutlinedIcon from \"@material-ui/icons/LockOpenOutlined\";\nimport PlayArrowOutlinedIcon from \"@material-ui/icons/PlayArrowOutlined\";\nimport StopOutlinedIcon from \"@material-ui/icons/StopOutlined\";\n\nconst LoginContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n  margin: 10px 0 20px 0;\n`;\n\nconst GenerateButton = styled(Button)`\n  height: 100%;\n`;\n\nconst SessionButton = styled(Button)`\n  height: 100%;\n`;\n\nconst LoginUI = props => {\n  const {\n    currentKey,\n    onSessionStart,\n    onSessionEnd,\n    started,\n    onGenerateClick\n  } = props;\n\n  return (\n    <LoginContainer>\n      <TextField\n        label=\"API Key\"\n        InputProps={{\n          readOnly: true\n        }}\n        variant=\"outlined\"\n        value={currentKey}\n      />\n      <GenerateButton\n        onClick={onGenerateClick}\n        variant=\"outlined\"\n        color=\"secondary\"\n        startIcon={<LockOpenOutlinedIcon />}\n      >\n        Generate an API key for Amplitude SDK\n      </GenerateButton>\n      {started && currentKey ? (\n        <SessionButton\n          onClick={onSessionEnd}\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={<StopOutlinedIcon />}\n        >\n          Click here to end the session\n        </SessionButton>\n      ) : null}\n      {!started && currentKey ? (\n        <SessionButton\n          onClick={onSessionStart}\n          variant=\"outlined\"\n          color=\"primary\"\n          startIcon={<PlayArrowOutlinedIcon />}\n        >\n          Click here to start the session\n        </SessionButton>\n      ) : null}\n    </LoginContainer>\n  );\n};\n\nexport default LoginUI;\n","/**\n * https://material-ui.com/components/app-bar/\n */\nimport React from \"react\";\nimport { withAmplitudeContext } from \"mock-amplitude-sdk\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 30\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nconst ButtonAppBar = (props) => {\n  const { handleLogEvent } = props.context;\n  const classes = useStyles();\n\n  const handleSigninClick = () => {\n    handleLogEvent(\"login\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            News\n          </Typography>\n          <Button color=\"inherit\" onClick={handleSigninClick}>\n            Login\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default withAmplitudeContext(ButtonAppBar);\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withAmplitudeContext } from \"mock-amplitude-sdk\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n    maxWidth: 1000\n  },\n  card: {\n    width: 500,\n    height: 300\n  }\n});\n\nconst EventTable = props => {\n  const { events, handleLogEvent, flushEvents } = props.context;\n  const { started } = props;\n\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [property, setProperty] = useState(\"\");\n\n  useEffect(() => {\n    const eventRows = [];\n\n    if (events) {\n      events.forEach(event => {\n        eventRows.push(generateData(event));\n      });\n    }\n\n    setRows(eventRows);\n  }, [events]);\n\n  const handleNameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  const handlePropertyChange = event => {\n    setProperty(event.target.value);\n  }\n\n  const handleEventClick = () => {\n    handleLogEvent(username || \"testUser\", property);\n  };\n\n  const handleFlushClick = () => {\n    flushEvents();\n  };\n\n  const generateData = event => {\n    const properties = event.getEventProperties();\n\n    return {\n      eventID: event.getEventID(),\n      eventName: event.getEventName(),\n      hasProperties: properties ? 'True' : 'False'\n    };\n  };\n\n  return started ? (\n    <>\n      <TextField\n        label=\"Total Events\"\n        InputProps={{\n          readOnly: true\n        }}\n        variant=\"outlined\"\n        value={events.length}\n      />\n      <TextField\n        label=\"Username\"\n        value={username}\n        onChange={handleNameChange}\n        variant=\"outlined\"\n      />\n      <TextField\n        label=\"Property Detail\"\n        value={property}\n        onChange={handlePropertyChange}\n        variant=\"outlined\"\n      />\n      <Button onClick={handleEventClick} variant=\"outlined\" color=\"primary\">\n        Click here to log an event with your user information\n      </Button>\n      <Button onClick={handleFlushClick} variant=\"contained\" color=\"secondary\">\n        Click here to flush the events\n      </Button>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Event ID</TableCell>\n              <TableCell align=\"right\">Event Name</TableCell>\n              <TableCell align=\"right\">Has Properties</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <TableRow key={row.eventID}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.eventID}\n                </TableCell>\n                <TableCell align=\"right\">{row.eventName}</TableCell>\n                <TableCell align=\"right\">{row.hasProperties}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  ) : (\n    <Paper elevation={10} className={classes.card}>\n      Obtain an API key and start the test session\n    </Paper>\n  );\n};\n\nexport default withAmplitudeContext(EventTable);\n","import React, { useState } from \"react\";\nimport { withAmplitudeContext } from \"mock-amplitude-sdk\";\nimport LoginUI from \"./components/LoginUI\";\nimport AppBar from \"./components/AppBar\";\nimport EventTable from \"./components/EventTable\";\n\nconst App = props => {\n  const {\n    sessionStarted,\n    handleAPIKeyCreate,\n    handleEndSession,\n    generateAPIKey\n  } = props.context;\n\n  const [key, setKey] = useState(\"\");\n\n  const handleGenerateClick = () => {\n    const newKey = generateAPIKey();\n\n    setKey(newKey);\n  };\n\n  const handleSessionClose = () => {\n    handleEndSession();\n    setKey(\"\");\n  };\n\n  const handleSessionStart = () => {\n    handleAPIKeyCreate(key);\n  };\n\n  return (\n    <>\n      <AppBar />\n      <LoginUI\n        onSessionStart={handleSessionStart}\n        onSessionEnd={handleSessionClose}\n        onGenerateClick={handleGenerateClick}\n        started={sessionStarted}\n        currentKey={key}\n      />\n      <EventTable started={sessionStarted} />\n    </>\n  );\n};\n\nexport default withAmplitudeContext(App);\n","import React from \"react\";\nimport { AmplitudeProvider } from \"mock-amplitude-sdk\";\nimport App from \"./App\";\n\nconst AppWrapper = () => {\n  return (\n    <AmplitudeProvider>\n      <App />\n    </AmplitudeProvider>\n  );\n};\n\nexport default AppWrapper;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppWrapper from './AppWrapper';\n\nReactDOM.render(<AppWrapper />, document.getElementById('root'));\n"],"sourceRoot":""}